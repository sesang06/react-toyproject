'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/home/ubuntu/project1_frontend_submit/src/components/UserList/index.js';
//import './index.css';
var _react = require('react');var _react2 = _interopRequireDefault(_react);var _reactRedux = require('react-redux');

var _actions = require('../../actions');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var usernames = [];

class UserList extends _react.Component {
  constructor() {
    super();
    this.setReceiver = this.setReceiver.bind(this);
    this.getUserList = this.getUserList.bind(this);
  }

  getUserList() {
    if (this.props.loginStatus == 1) {
      this.props.getUser(this.props.uname, this.props.ubase64);
    }
  }

  setReceiver(e) {
    var index = e.nativeEvent.target.selectedIndex;
    var selected = e.nativeEvent.target[index].text;
    this.props.setSender(this.props.uname, this.props.ubase64);
    this.props.setReceiver(selected);
  }
  /*
      updateUsernames() {
        this.getUserList();
        usernames = this.props.usernames
      }    
    
      componentDidMount() {
        this.timerID = setInterval(
          () => this.updateUsernames(), 1000
        );
      }
    
      componentWillUmount() {
        clearInterval(this.timerID)
      }
    */
  render() {
    if (this.props.loginStatus == 1) {
      usernames = this.props.usernames;
      let len = usernames.length;
      return (
        _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: this },
          _react2.default.createElement('button', { id: 'chat_get_userlist', onClick: this.getUserList, __source: { fileName: _jsxFileName, lineNumber: 50 }, __self: this }, 'Get User List'),
          _react2.default.createElement('select', { id: 'chat_userlist', onChange: this.setReceiver, __source: { fileName: _jsxFileName, lineNumber: 51 }, __self: this },
            _react2.default.createElement('option', { value: 'chat_user_0', disabled: 'true', __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, 'receiver'),
            Array.apply(null, Array(len)).map(function (item, i) {
              return (
                _react2.default.createElement('option', { id: "chat_user_" + (i + 1), key: i + 1, value: i + 1, __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this }, usernames[i]));

            }, this))));



    } else {
      return (
        _react2.default.createElement('div', { __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: this }));


    }
  }}


let mapStateToProps = state => {
  return {
    usernames: state.userlist_reducer.usernames,
    uname: state.login_reducer.uname,
    ubase64: state.login_reducer.ubase64,
    loginStatus: state.login_reducer.loginStatus };

};

let mapDispatchToProps = dispatch => {
  return {
    setReceiver: receiver => dispatch((0, _actions.SetReceiver)(receiver)),
    setSender: (uname, ubase64) => dispatch((0, _actions.SetSender)(uname, ubase64)),
    getUser: (uname, upwd) => dispatch((0, _actions.GetUserRequest)(uname, upwd)) };

};exports.default =

(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UserList);